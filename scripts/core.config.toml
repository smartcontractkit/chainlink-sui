[Log]
Level = 'debug'

[Feature]
FeedsManager = false
LogPoller = false
UICSAKeys = true

[OCR2]
Enabled = false

[P2P]
[P2P.V2]
Enabled = true
DeltaDial = '5s'
DeltaReconcile = '5s'
ListenAddresses = ['0.0.0.0:6691']

[WebServer]
HTTPPort = 6688
TLS.HTTPSPort = 0
AllowOrigins = '*'

[[Sui]]
Enabled = true
ChainID = "4"
NetworkName = "localnet" # optional
NetworkNameFull = "sui-localnet" # optional, CLL naming convention


[[Sui.Nodes]]
Name = 'sui-node-1'
URL = 'http://localhost:9000'  # For local development
SolidityURL = 'http://localhost:9000'

[Sui.TransactionManager]
BroadcastChanSize = 100
ConfirmPollSecs = 2
DefaultMaxGasAmount = 200000
MaxTxRetryAttempts = 5
RequestType = 'WaitForEffectsCert'
TransactionTimeout = '10s'
MaxConcurrentRequests = 5


# [Tracing]
# # Enabled turns trace collection on or off. On requires an OTEL Tracing Collector.
# Enabled = true
# # CollectorTarget is the logical address of the OTEL Tracing Collector.
# CollectorTarget = 'otelcollectoragent:4317'
# # NodeID is an unique name for this node relative to any other node traces are collected for.
# NodeID = 'node-local-$IDX' # Example
# # SamplingRatio is the ratio of traces to sample for this node.
# SamplingRatio = 1.0 # Example
# # Mode is a string value. `tls` or `unencrypted` are the only values allowed. If set to `unencrypted`, `TLSCertPath` can be unset, meaning traces will be sent over plaintext to the collector.
# Mode = 'unencrypted' # Default
# # TLSCertPath is the file path to the TLS certificate used for secure communication with an OTEL Tracing Collector.
# # TLSCertPath = '/path/to/cert.pem' # Example

# # Tracing.Attributes are user specified key-value pairs to associate in the context of the traces
# [Tracing.Attributes]
# # example user specified key-value pair tracing attributes
# aptos_tracing_attr = 'test' # Example

# # Telemetry holds OTEL settings.
# # This data includes open telemetry metrics, traces, & logs.
# # It does not currently include prometheus metrics or standard out logs, but may in the future.
# [Telemetry]
# # Enabled turns telemetry collection on or off.
# Enabled = true
# # Endpoint of the OTEL Collector.
# Endpoint = 'otelcollectoragent:4317'
# # CACertFile is the file path of the TLS certificate used for secure communication with the OTEL Collector.
# # Required unless InescureConnection is true.
# # CACertFile = 'cert-file' # Example
# # InsecureConnection bypasses the TLS CACertFile requirement and uses an insecure connection instead.
# # Only available in dev mode.
# InsecureConnection = true # Default
# # TraceSampleRatio is the rate at which to sample traces. Must be between 0 and 1.
# TraceSampleRatio = 1

# # ResourceAttributes are global metadata to include with all telemetry.
# [Telemetry.ResourceAttributes]
# # example user specified key-value pair telemetry resource attributes
# node_id = 'node-local-$IDX' # Example

# [[EVM]]
# ChainID = '$SOURCE_CHAIN_ID'
# GasEstimator = { PriceMax = '200 gwei', LimitDefault = 6000000, FeeCapDefault = '200 gwei' }
# Nodes = [{ Name = 'node-eth-sepolia', WSURL = '$SOURCE_CHAIN_WS', HTTPURL = '$SOURCE_CHAIN_HTTP' }]

# [[EVM]]
# ChainID = '$DEST_CHAIN_ID'
# ChainType = 'optimismBedrock'
# FinalityDepth = 200
# LogPollInterval = '2s'
# NoNewHeadsThreshold = '40s'
# MinIncomingConfirmations = 1
# Transactions = { ResendAfterThreshold = '30s'}
# NodePool = { SyncThreshold = 10 }
# OCR = { ContractConfirmations = 1 }
# HeadTracker = { HistoryDepth = 300 }
# GasEstimator = { EIP1559DynamicFees = true, BlockHistory.BlockHistorySize = 60, PriceMin = '1 wei', BumpMin = '100 wei' }
# Nodes = [{ Name = 'node-base-sepolia', WSURL = '$DEST_CHAIN_WS', HTTPURL = '$DEST_CHAIN_HTTP' }]